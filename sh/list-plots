#! /bin/sh
#
# List all plots for $network.
#
# These are only basenames, without the .eps suffix
#
# Only existing files are output.
#
# INPUT FILES
#	dat/DECOMPOSITIONS 
#

{
	for x in b c d ; do
		echo weights."$x"."$network"
	done
	for x in ax ux vx uvx ; do
		echo bidd."$x"."$network"
	done
	for x in a u v ; do
		echo degree."$x"."$network"
	done
	for x in a u v ; do
		echo assortativity."$x"."$network"
	done
	for x in a u v ; do
		echo lorenz."$x"."$network"
	done
	for x in a u v ; do
		echo zipf."$x"."$network"
	done
	for x in a b ; do
		echo time_histogram."$x"."$network"
	done
	echo time_histogram_signed.a."$network"
	echo diadens.a."$network"
	echo cluscod.a."$network"
	for x in a b c d e f g ; do
		echo hopdistr."$x"."$network"
	done
	for x in a b c ; do
		echo hopdistr_time.full."$x"."$network"
	done
	for x in a b c ; do
		echo outin."$x"."$network"
	done
	for decomposition in $(cat dat/DECOMPOSITIONS) ; do
		for x in a b d complex dedicom log cumul ; do
			echo decomposition."$x"."$decomposition"."$network"
		done
	done
	for x in a b ; do
		echo rating_evolution."$x"."$network"
	done
	echo rating_evolution2.c."$network"
	echo degcc.a."$network"
	for decomposition in sym sym-n lap ; do
		echo distr."$decomposition".f."$network"
	done
	for decomposition in sym lap stoch ; do
		echo map."$decomposition".a."$network"
	done
	
} | while IFS= read -r name ; do
	sh/proper-plot plot/"$name".eps && 
		printf '%s\n' "$name"
done

exit 0
