#
# This is the Stu script to generate the KONECT website.  Stu is similar
# to Make, but with support for much more complex dependency
# structures.  Run 'stu' in this directory (like you would run 'make').
# Get Stu from:
#
#	https://github.com/kunegis/stu
#
# The KONECT website is completely static -- it consists only of regular
# files that can be put on any HTTP server, or viewed locally.  It
# *does* however contain client-side scripts.
#
# The website as generated by this script is in www/, and can be
# completely regenerated by this script.  All HTML files are pure ASCII.   
#
# The skeleton/ directory contains all HTML files, but without header
# and footer, in UTF-8. 
#
# The static/ directory contains static content that is not generated,
# i.e., part of this package. 
#

% version 2.5

@all:
	www/index.html
	www/about/index.html
	www/networks/index.html
	www/networks/[dat/NETWORKS]/index.html
	www/statistics/index.html
	www/statistics/[dat-www/STATISTICS_MAIN]/index.html
	www/plots/index.html
	www/plots/[dat/PLOTS]/index.html
	www/plot/[dat-www/plots-network.[dat/NETWORKS]].(small full).png
	www/files/download.tsv.[dat-www/NETWORKS-DOWNLOAD].tar.bz2
	www/favicon.ico
;

#
# Directories
#

www/ { mkdir -p www ; }
www/$name/ {mkdir -p www/"$name" ; }

skeleton/$dir/:  { mkdir -p skeleton/"$dir" ; }

dat/$name:  -p dat/;
dat/ {
	echo >&2 '*** dat/ must be a symlink to the analysis/dat/ directory of KONECT'
	exit 1
}

uni/$name:  -p uni/;
uni/ {
	echo >&2 '*** uni/ must be a symlink to the konect/uni/ directory of KONECT'
	exit 1
}

plot/ {
	echo >&2 '*** plot/ must be a symlink to the analysis/dat/ directory of KONECT'
	exit 1
}

dat-$name/ {
	echo >&2 "*** dat-$name/ must be a symlink to the analysis/dat-$name/ directory of KONECT"
	exit 1
}

konect-extr/ {
	echo >&2 '*** konect-extr/ must be a symlink to the corresponding project directory'
	exit 1
}

#
# Lists
#

# Only the main statistics, i.e., without substatistics
>dat-www/STATISTICS_MAIN:  <dat/STATISTICS
{
	grep -F -v +
}

#
# HTML
#

www/$name.html:
	sh/write-html
	skeleton/$name.html  static/(head foot).html
{
	sh/write-html
}

skeleton/index.html = static/index.html;
skeleton/about/index.html: static/about.html -p skeleton/about/
{
	cp static/about.html skeleton/about/index.html
}

>skeleton/networks/index.html:
	-p skeleton/networks/
	dat/NETWORKS
	sh/write-networks
{
	sh/write-networks
}

>skeleton/networks/$network/index.html:
	sh/write-network sh/read-meta dat/ plot/
	-p skeleton/networks/$network/ konect-extr/konect.bib dat/allowed_src.txt
	dat/STATISTICS
	uni/meta.$network
	dat-www/plots-network.$network
	konect-toolbox/m/konect_consts.m 
{
	sh/write-network
}

>skeleton/statistics/index.html:
	sh/write-statistics
	-p skeleton/statistics/ dat/STATISTICS
	konect-toolbox/m/konect_label_statistic.m 
{
	sh/write-statistics
}

>skeleton/statistics/$statistic/index.html:
	sh/write-statistic -p skeleton/statistics/$statistic/ dat/
	dat/NETWORKS
	konect-toolbox/m/konect_label_statistic.m
{
	sh/write-statistic
}

>skeleton/plots/index.html:
	sh/write-plots
	-p skeleton/plots/ dat/PLOTS
{
	sh/write-plots
}

>skeleton/plots/$plot/index.html:
	sh/write-plot -p skeleton/plots/$plot/ plot/
	dat/NETWORKS
	dat-www/plots-network.[dat/NETWORKS]
{
	sh/write-plot
}

#
# Plots
#

# Basename of all plots for one network, without directory name or
# filename suffix 
>dat-www/plots-network.$network:
	-p dat-www/ plot/
	sh/list-plots
	dat/DECOMPOSITIONS
{
	sh/list-plots
}

www/plot/$name.small.png:
	-o plot/$name.(eps png) -p www/plot/ sh/convert-small
{
	sh/convert-small
}

www/plot/$name.full.png:
	-o plot/$name.(eps png) -p www/plot/ sh/convert-full 
{
	sh/convert-full
}

#
# Files
#

>dat-www/NETWORKS-DOWNLOAD:  <dat/allowed_src.txt
{
	sed -E -e 's|^\s*([^, ]+)\s*,\s*matrix\s*$|\1|;t;d'
}

www/files/download.tsv.$network.tar.bz2: dat/download.tsv.$network.tar.bz2 -p www/files/
{
	cp dat/download.tsv.$network.tar.bz2 www/files/
}

#
# Design
#

www/favicon.ico = logo/;
